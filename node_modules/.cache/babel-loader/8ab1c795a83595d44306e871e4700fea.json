{"ast":null,"code":"var _jsxFileName = \"/media/shiju/A052C83E52C81AC4/practice/netflix-react/netflix/src/components/Rowpost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_KEY } from '../constants/Constants';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Rowpost = () => {\n  _s();\n\n  const [trendingMovies, setTrendingMoviesData] = useState();\n  const [netflixOriginals, setNetflixOriginals] = useState([]);\n  const [youtubeUrl, setyoutubeUrl] = useState();\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`).then(res => {\n      setTrendingMoviesData(res.data);\n    });\n    axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}`).then(res => {\n      setNetflixOriginals(res.data.results);\n    });\n  }, []);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowpost\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie mt-3\",\n        style: {\n          color: \"white\"\n        },\n        children: \"Netflix originals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posters\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster\",\n          children: netflixOriginals && netflixOriginals.map((item, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => {\n              axios.get(`https://api.themoviedb.org/3/movie/${item.id}/videos?api_key=f0bde51db52e9c6388d864e6ab433ac6&language=en-US`).then(Response => {\n                if (Response.data.results.length !== 0) {\n                  setyoutubeUrl(Response.data.results);\n                } else alert(\"no videos available for selected movie\");\n              }).catch(error => {\n                console.log(\"error message\", error);\n              });\n            },\n            alt: \"kjasdklf\",\n            src: `https://image.tmdb.org/t/p/w500/${item.backdrop_path}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), youtubeUrl && youtubeUrl.length !== 0 && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: youtubeUrl[0].key,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowpost\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie mt-3\",\n        style: {\n          color: \"white\"\n        },\n        children: \"Trending Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posters\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster\",\n          children: trendingMovies && trendingMovies.results.map((item, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => {\n              axios.get(`https://api.themoviedb.org/3/movie/${item.id}/videos?api_key=f0bde51db52e9c6388d864e6ab433ac6&language=en-US`).then(Response => {\n                if (Response.data.results.length !== 0) {\n                  setyoutubeUrl(Response.data.results);\n                } else alert(\"no videos available for selected movie\");\n              }).catch(error => {\n                console.log(\"error message\", error);\n              });\n            },\n            alt: \"ijlskdf\",\n            src: `https://image.tmdb.org/t/p/w500/${item.poster_path}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Rowpost, \"SqaH5L6tny2BlIy8SyP54y9objQ=\");\n\n_c = Rowpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rowpost\");","map":{"version":3,"sources":["/media/shiju/A052C83E52C81AC4/practice/netflix-react/netflix/src/components/Rowpost.js"],"names":["React","useState","useEffect","axios","API_KEY","YouTube","Rowpost","trendingMovies","setTrendingMoviesData","netflixOriginals","setNetflixOriginals","youtubeUrl","setyoutubeUrl","get","then","res","data","results","opts","height","width","playerVars","autoplay","color","map","item","index","id","Response","length","alert","catch","error","console","log","backdrop_path","key","poster_path"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_KEY } from '../constants/Constants'\nimport YouTube from 'react-youtube';\n\nexport const Rowpost = () => {\n  const [trendingMovies, setTrendingMoviesData] = useState();\n  const [netflixOriginals, setNetflixOriginals] = useState([]);\n  const [youtubeUrl, setyoutubeUrl] = useState();\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n      .then((res) => {\n        setTrendingMoviesData(res.data);\n      });\n\n    axios\n      .get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}`)\n      .then((res) => {\n        setNetflixOriginals(res.data.results);\n      });\n  }, []);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n  return (\n    <>\n      <div className=\"rowpost\">\n        <p className=\"movie mt-3\" style={{ color: \"white\" }}>\n          Netflix originals\n        </p>\n        <div className=\"posters\">\n          <div className=\"poster\">\n            {netflixOriginals &&\n              netflixOriginals.map((item, index) => (\n                <img\n                  key={index}\n                  onClick={() => {\n                    axios\n                      .get(\n                        `https://api.themoviedb.org/3/movie/${item.id}/videos?api_key=f0bde51db52e9c6388d864e6ab433ac6&language=en-US`\n                      )\n                      .then((Response) => {\n                        if (Response.data.results.length !== 0) {\n                          setyoutubeUrl(Response.data.results);\n                        } else alert(\"no videos available for selected movie\");\n                      })\n                      .catch((error) => {\n                        console.log(\"error message\", error);\n                      });\n                  }}\n                  alt=\"kjasdklf\"\n                  src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`}\n                />\n              ))}\n          </div>\n        </div>\n        {youtubeUrl && youtubeUrl.length !== 0 && (\n          <YouTube videoId={youtubeUrl[0].key} opts={opts} />\n        )}\n      </div>\n      {/* trending movies */}\n      <div className=\"rowpost\">\n        <p className=\"movie mt-3\" style={{ color: \"white\" }}>\n          Trending Movies\n        </p>\n        <div className=\"posters\">\n          <div className=\"poster\">\n            {trendingMovies &&\n              trendingMovies.results.map((item, index) => (\n                <img\n                  onClick={() => {\n                    axios\n                      .get(\n                        `https://api.themoviedb.org/3/movie/${item.id}/videos?api_key=f0bde51db52e9c6388d864e6ab433ac6&language=en-US`\n                      )\n                      .then((Response) => {\n                        if (Response.data.results.length !==0) {\n                          setyoutubeUrl(Response.data.results);\n                        } else alert(\"no videos available for selected movie\");\n                      })\n                      .catch((error) => {\n                        console.log(\"error message\", error);\n                      });\n                  }}\n                  key={index}\n                  alt=\"ijlskdf\"\n                  src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}